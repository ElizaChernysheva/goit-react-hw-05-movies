{"version":3,"file":"static/js/301.108cf85a.chunk.js","mappings":"+PACA,EAA6B,8BAA7B,EAAyE,+BAAzE,EAAmH,4BAAnH,EAA2J,6BAA3J,EAAkM,2BAAlM,EAA4O,gCAA5O,EAAyR,8BAAzR,EAAmU,6BAAnU,EAA0W,2BAA1W,EAAmZ,+BAAnZ,EAA6b,4B,SC6D7b,EAzDkB,WAAO,IAAD,IACdA,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAA0BE,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAqBF,EAAAA,EAAAA,UAAS,MAArBG,GAAT,eACMC,GAAWC,EAAAA,EAAAA,MACXC,EAAM,iBAAGF,QAAH,IAAGA,GAAH,UAAGA,EAAUG,aAAb,aAAG,EAAiBC,YAApB,QAA4B,IALlB,SAOPC,IAPO,uEAOtB,8GAE+BC,EAAAA,EAAAA,IAAgBZ,GAF/C,OAEUa,EAFV,OAGIT,EAASS,GAHb,gDAKIR,EAAS,EAAD,IALZ,0DAPsB,uBAgBtBS,EAAAA,EAAAA,YAAU,YACR,iBAAC,8FACOH,IADP,0CAAD,EAID,GAAE,IAEH,IAAQI,EAAgEZ,EAAhEY,YAAaC,EAAmDb,EAAnDa,MAArB,EAAwEb,EAA5Cc,OAAAA,OAA5B,MAAqC,GAArC,EAAyCC,EAA+Bf,EAA/Be,SAAzC,EAAwEf,EAArBgB,aAAAA,OAAnD,MAAkE,EAAlE,EACA,OACE,iCACE,SAAC,KAAD,CAASC,UAAWC,EAAiBC,GAAId,EAAzC,sBACA,eAAIY,UAAWC,EAAf,SAAgCL,KAChC,iBAAKI,UAAWC,EAAhB,WACE,gBAAKD,UAAWC,EAAaE,IAAG,0CAAqCR,GAAeS,IAAKR,KACzF,iBAAKI,UAAWC,EAAhB,WACE,eAAID,UAAWC,EAAf,wBACA,cAAGD,UAAWC,EAAd,SAAiCH,KACjC,eAAIE,UAAWC,EAAf,qBACCJ,EAAOQ,OAAS,IACf,cAAGL,UAAWC,EAAd,SACGJ,EAAOS,KAAI,qBAAGC,IAAH,IAAoBC,KAAK,SAGzC,eAAGR,UAAWC,EAAd,wBAAyCF,EAAaU,QAAQ,GAA9D,QACA,eAAIT,UAAWC,EAAf,qCACA,gBAAID,UAAWC,EAAf,WACE,yBACE,SAAC,KAAD,CAASD,UAAWC,EAAcC,GAAG,OAArC,qBAEF,yBACE,SAAC,KAAD,CAASF,UAAWC,EAAcC,GAAG,UAArC,iCAKR,SAAC,KAAD,MAGL,C,sLCtDKQ,E,MAAWC,GAAAA,OAAa,CAC5BC,QAAS,gCACTC,OAAQ,CACNC,QAAS,sCAIN,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,sGACiBL,EAASM,IAAT,sBADjB,uBACEC,EADF,EACEA,KADF,kBAECA,EAAKC,SAFN,kEAKA,SAAe1B,EAAtB,+CAAO,OAAP,oBAAO,WAA+BZ,GAA/B,yFACkB8B,EAASM,IAAT,iBAAuBpC,IADzC,uBACGqC,EADH,EACGA,KADH,kBAEEA,GAFF,kEAKA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,yFACkBV,EAASM,IAAT,8BAAoCI,IADtD,uBACGH,EADH,EACGA,KADH,kBAEEA,EAAKC,SAFP,kEAMA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA+BzC,GAA/B,yFACkB8B,EAASM,IAAT,iBAAuBpC,EAAvB,aADlB,uBACGqC,EADH,EACGA,KADH,kBAEEA,EAAKK,MAFP,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+B3C,GAA/B,yFACkB8B,EAASM,IAAT,iBAAuBpC,EAAvB,aADlB,uBACGqC,EADH,EACGA,KADH,kBAEEA,EAAKC,SAFP,kE","sources":["webpack://goit-react-hw-05-movies/./src/pages/MovieCard/MovieCard.module.css?2455","pages/MovieCard/MovieCard.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movieTitle\":\"MovieCard_movieTitle__Ry6UD\",\"cardWrapper\":\"MovieCard_cardWrapper__9WSgO\",\"cardInfo\":\"MovieCard_cardInfo__4VNtL\",\"cardTitle\":\"MovieCard_cardTitle__IcyIc\",\"cardImg\":\"MovieCard_cardImg__AkAnM\",\"cardOverview\":\"MovieCard_cardOverview__l9fGW\",\"cardGenres\":\"MovieCard_cardGenres__D6Cw4\",\"cardScore\":\"MovieCard_cardScore__G1kGN\",\"cardNav\":\"MovieCard_cardNav__TiLLo\",\"cardBtnBack\":\"MovieCard_cardBtnBack__xSqWB\",\"cardLink\":\"MovieCard_cardLink__pOoPo\"};","import { useEffect, useState } from 'react';\nimport { NavLink, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { getMovieDetails } from '../../services/api';\nimport css from './MovieCard.module.css';\n\nconst MovieCard = () => {\n  const { id } = useParams();\n  const [movie, setMovie] = useState({});\n  const [, setError] = useState(null);\n  const location = useLocation();\n  const goBack = location?.state?.from ?? '/';\n\n  async function getMovie() {\n    try {\n      const movieDetails = await getMovieDetails(id);\n      setMovie(movieDetails);\n    } catch (error) {\n      setError(error);\n    }\n  }\n\n  useEffect(() => {\n    (async () => {\n      await getMovie();\n    })();\n    // eslint-disable-next-line\n  }, []);\n\n  const { poster_path, title, genres = [], overview, vote_average = 0 } = movie;\n  return (\n    <>\n      <NavLink className={css.cardBtnBack} to={goBack}>Go back</NavLink>\n      <h2 className={css.movieTitle}>{title}</h2>\n      <div className={css.cardWrapper}>\n        <img className={css.cardImg} src={`https://image.tmdb.org/t/p/w300/${poster_path}`} alt={title} />\n        <div className={css.cardInfo}>\n          <h3 className={css.cardTitle}>Overview </h3>\n          <p className={css.cardOverview}>{overview}</p>\n          <h3 className={css.cardTitle}>Genres </h3>\n          {genres.length > 0 && (\n            <p className={css.cardGenres}>\n              {genres.map(({ name }) => name).join(', ')}\n            </p>\n          )}\n          <p className={css.cardScore}>User score {vote_average.toFixed(2)}%</p>\n          <h3 className={css.cardTitle}>Additional information</h3>\n          <ul className={css.cardNav}>\n            <li>\n              <NavLink className={css.cardLink} to='cast'>Cast</NavLink>\n            </li>\n            <li>\n              <NavLink className={css.cardLink} to='reviews'>Reviews</NavLink>\n            </li>\n          </ul>\n        </div>\n      </div>\n      <Outlet />\n    </>\n  );\n};\n\n\nexport default MovieCard;\n","import axios from 'axios';\n\n// const API_KEY = '8fd009ebb96e5f67bc9aff26848b4b67';\n// const BASE_URL = 'https://api.themoviedb.org/'\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: '8fd009ebb96e5f67bc9aff26848b4b67'\n  }\n});\n\nexport async function getTrendingMovies(){\n const { data } = await instance.get(`trending/movie/day`)\n return data.results;\n}\n\nexport async function getMovieDetails(id){\n  const { data } = await instance.get(`/movie/${id}`)\n  return data;\n}\n\nexport async function searchMovies(query){\n  const { data } = await instance.get(`/search/movie?query=${query}`)\n  return data.results;\n}\n\n\nexport async function getMovieCredits(id){\n  const { data } = await instance.get(`/movie/${id}/credits`)\n  return data.cast;\n}\n\nexport async function getMovieReviews(id){\n  const { data } = await instance.get(`/movie/${id}/reviews`)\n  return data.results;\n}\n"],"names":["id","useParams","useState","movie","setMovie","setError","location","useLocation","goBack","state","from","getMovie","getMovieDetails","movieDetails","useEffect","poster_path","title","genres","overview","vote_average","className","css","to","src","alt","length","map","name","join","toFixed","instance","axios","baseURL","params","api_key","getTrendingMovies","get","data","results","searchMovies","query","getMovieCredits","cast","getMovieReviews"],"sourceRoot":""}