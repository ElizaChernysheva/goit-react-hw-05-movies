{"version":3,"file":"static/js/936.970b06a9.chunk.js","mappings":"mLACA,EAAyB,uB,SCgBzB,EAbe,WACb,OACE,gBAAKA,UAAWC,EAAhB,UACE,SAAC,KAAD,CACEC,MAAM,MACNC,OAAO,MACPC,MAAM,aAIb,C,wFCbD,EAA4B,6BAA5B,EAAoE,4BAApE,EAA4G,6BAA5G,EAAsJ,8B,kBCIzIC,EAAY,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,GAAIC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,YAAaC,EAAY,EAAZA,MAClD,OACE,0BACE,eAAIT,UAAWC,EAAf,UACE,UAAC,KAAD,CAASD,UAAWC,EAAeS,GAAE,kBAAaJ,GAAMG,MAAOA,EAA/D,WACE,gBAAKT,UAAWC,EAAcU,IAAG,0CAAqCH,GAAeI,IAAKL,KAC1F,cAAGP,UAAWC,EAAd,SAA+BM,UAKxC,EAWD,G,6HC1BA,EAA2B,uBAA3B,EAA8D,wB,2BCyC9D,EApCa,WACX,OAA2CM,EAAAA,EAAAA,UAAS,IAApD,eAAOC,EAAP,KAAsBC,EAAtB,KACA,GAAyBF,EAAAA,EAAAA,UAAS,MAAlC,eAAOG,EAAP,KAAaC,EAAb,KACA,GAA+BJ,EAAAA,EAAAA,WAAS,GAAxC,eAAOK,EAAP,KAAiBC,EAAjB,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,YACR,iBAAC,2FACCD,GAAW,GADZ,mBAGwBE,EAAAA,EAAAA,MAHxB,OAGSC,EAHT,OAIGP,EAAkBO,GAJrB,gDAMGL,EAAS,EAAD,IANX,yBAQGE,GAAW,GARd,2EAAD,EAYD,GAAC,KAIA,6BACE,2CACCD,IAAa,SAACK,EAAA,EAAD,IACbP,GACC,cAAGhB,UAAWC,EAAd,+CACA,eAAID,UAAWC,EAAf,SACCa,EAAeU,KAAI,gBAAElB,EAAF,EAAEA,GAAGC,EAAL,EAAKA,MAAMC,EAAX,EAAWA,YAAX,OAClB,SAACH,EAAA,EAAD,CAAoBC,GAAIA,EAAIC,MAAOA,EAAOC,YAAaA,GAAvCF,EADE,QAM3B,C,sLCnCKmB,E,MAAWC,GAAAA,OAAa,CAC5BC,QAAS,gCACTC,OAAQ,CACNC,QAAS,sCAIN,SAAeR,IAAtB,4CAAO,OAAP,oBAAO,sGACiBI,EAASK,IAAT,sBADjB,uBACEC,EADF,EACEA,KADF,kBAECA,EAAKC,SAFN,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+B3B,GAA/B,yFACkBmB,EAASK,IAAT,iBAAuBxB,IADzC,uBACGyB,EADH,EACGA,KADH,kBAEEA,GAFF,kEAKA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,yFACkBV,EAASK,IAAT,8BAAoCK,IADtD,uBACGJ,EADH,EACGA,KADH,kBAEEA,EAAKC,SAFP,kEAMA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA+B9B,GAA/B,yFACkBmB,EAASK,IAAT,iBAAuBxB,EAAvB,aADlB,uBACGyB,EADH,EACGA,KADH,kBAEEA,EAAKM,MAFP,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BhC,GAA/B,yFACkBmB,EAASK,IAAT,iBAAuBxB,EAAvB,aADlB,uBACGyB,EADH,EACGA,KADH,kBAEEA,EAAKC,SAFP,kE","sources":["webpack://goit-react-hw-05-movies/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","webpack://goit-react-hw-05-movies/./src/components/MovieItem/MovieItem.module.css?431a","components/MovieItem/MovieItem.jsx","webpack://goit-react-hw-05-movies/./src/pages/Home/Home.module.css?1370","pages/Home/Home.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"Loader\":\"Loader_Loader__wqo9C\"};","import { InfinitySpin } from 'react-loader-spinner';\nimport css from './Loader.module.css';\n\n\nconst Loader = () => {\n  return (\n    <div className={css.Loader}>\n      <InfinitySpin\n        width='200'\n        height='100'\n        color='#ac9b33'\n      />\n    </div>\n  );\n};\n\n\nexport default Loader;\n","// extracted by mini-css-extract-plugin\nexport default {\"movieItem\":\"MovieItem_movieItem__+5IiU\",\"movieImg\":\"MovieItem_movieImg__ptbHU\",\"movieLink\":\"MovieItem_movieLink__6fTV-\",\"movieTitle\":\"MovieItem_movieTitle__wagvN\"};","import React from 'react';\nimport css from './MovieItem.module.css';\nimport { NavLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport const MovieItem = ({ id, title, poster_path, state }) => {\n  return (\n    <div>\n      <li className={css.movieItem}>\n        <NavLink className={css.movieLink} to={`/movies/${id}`} state={state}>\n          <img className={css.movieImg} src={`https://image.tmdb.org/t/p/w300/${poster_path}`} alt={title} />\n          <p className={css.movieTitle}>{title}</p>\n        </NavLink>\n      </li>\n    </div>\n  );\n};\n\n\nMovieItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  poster_path: PropTypes.string.isRequired,\n  state: PropTypes.object,\n};\n\n\nexport default MovieItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"homeList\":\"Home_homeList__kBzvV\",\"homeError\":\"Home_homeError__4o9E8\"};","import React, { useEffect, useState } from 'react';\nimport { getTrendingMovies } from '../../services/api'\nimport css from './Home.module.css'\nimport Loader from '../../components/Loader/Loader';\nimport { MovieItem } from '../../components/MovieItem/MovieItem';\n\nconst Home = () => {\n  const [trendingMovies,setTrendingMovies] = useState([])\n  const [error,setError] = useState(null)\n  const [isLoading,setLoading] = useState(false);\n\n  useEffect(()=>{\n    (async ()=>{\n      setLoading(true)\n      try{\n        const movies = await getTrendingMovies();\n        setTrendingMovies(movies)\n      }catch (error){\n        setError(error)\n      }finally {\n        setLoading(false)\n      }\n    })()\n\n  },[])\n\n\n  return (\n    <main>\n      <h1>Trending today</h1>\n      {isLoading && <Loader/>}\n      {error ?\n        <p className={css.homeError}>Something went wrong...Try again</p> :\n        <ul className={css.homeList}>\n        {trendingMovies.map(({id,title,poster_path}) =>(\n          <MovieItem key={id} id={id} title={title} poster_path={poster_path}/>\n        ))}\n      </ul>}\n    </main>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\n// const API_KEY = '8fd009ebb96e5f67bc9aff26848b4b67';\n// const BASE_URL = 'https://api.themoviedb.org/'\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: '8fd009ebb96e5f67bc9aff26848b4b67'\n  }\n});\n\nexport async function getTrendingMovies(){\n const { data } = await instance.get(`trending/movie/day`)\n return data.results;\n}\n\nexport async function getMovieDetails(id){\n  const { data } = await instance.get(`/movie/${id}`)\n  return data;\n}\n\nexport async function searchMovies(query){\n  const { data } = await instance.get(`/search/movie?query=${query}`)\n  return data.results;\n}\n\n\nexport async function getMovieCredits(id){\n  const { data } = await instance.get(`/movie/${id}/credits`)\n  return data.cast;\n}\n\nexport async function getMovieReviews(id){\n  const { data } = await instance.get(`/movie/${id}/reviews`)\n  return data.results;\n}\n"],"names":["className","css","width","height","color","MovieItem","id","title","poster_path","state","to","src","alt","useState","trendingMovies","setTrendingMovies","error","setError","isLoading","setLoading","useEffect","getTrendingMovies","movies","Loader","map","instance","axios","baseURL","params","api_key","get","data","results","getMovieDetails","searchMovies","query","getMovieCredits","cast","getMovieReviews"],"sourceRoot":""}